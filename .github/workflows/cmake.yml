name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:
    name: ${{ matrix.os }}-hosted-basic
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            buildtype: Release
          - os: ubuntu-latest
            triplet: x64-linux
            buildtype: Release
          - os: macos-latest
            triplet: x64-osx
            buildtype: Release

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: lukka/get-cmake@latest
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
        
      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          setupOnly: true
          vcpkgTriplet: '${{ matrix.triplet }}'
          vcpkgArguments: '@${{ env.VCPKGRESPONSEFILE }}'
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          appendedCacheKey: ${{ hashFiles( env.VCPKGRESPONSEFILE ) }}
          
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
        
      - name: Prints outputs of run-vcpkg task
        run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
        
#      - name: Configure CMake Ubuntu
#        run: |
#          mkdir -p build
#          cd build
#          cmake .. -DCMAKE_TOOLCHAIN_FILE="vcpkg/scripts/buildsystems/vcpkg.cmake"
#            -DAPR_BUILD_STATIC_LIB=ON \
#            -DAPR_BUILD_SHARED_LIB=ON \
#            -DAPR_BUILD_EXAMPLES=ON \
#            -DAPR_TESTS=ON \
#            -DAPR_USE_CUDA=OFF \
#            -DAPR_PREFER_EXTERNAL_BLOSC=ON \

      - name: Build with CMake
        uses: lukka/run-cmake@main
        with:
          useVcpkgToolchainFile: true
          buildDirectory: ${{ runner.workspace }}/build
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeAppendedArgs: '-DCMAKE_BUILD_TYPE="${{ matrix.buildtype }}" -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} '
 

